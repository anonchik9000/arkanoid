<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gaming.IdentityProvider.Contracts</name>
    </assembly>
    <members>
        <member name="T:Gaming.IdentityProvider.Contracts.V1.IIdentityProvider">
            <summary>
            Interface for dealing with claims-based identity.
            </summary>
        </member>
        <member name="M:Gaming.IdentityProvider.Contracts.V1.IIdentityProvider.AuthenticateAsync(System.String,System.String)">
            <summary>
            Creates an Identity Token associated with the account.
            </summary>
            <param name="accessToken">Access token associated with you account. E.g. taken from Facebook.</param>
            <param name="accessOrigin" example="Facebook">Origin of the accessToken. "Guest", "Facebook" etc.</param>
            <returns>Identity token associated with the account.</returns>
        </member>
        <member name="M:Gaming.IdentityProvider.Contracts.V1.IIdentityProvider.AssignAccountAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Assigns an account to an existing one.
            </summary>
            <param name="idToken">Identity token for the existing account taken with <see cref="M:Gaming.IdentityProvider.Contracts.V1.IIdentityProvider.AuthenticateAsync(System.String,System.String)"/>.</param>
            <param name="accessToken">Access token for the account you'd like to assign. E.g. taken from Facebook.</param>
            <param name="accessOrigin" example="Facebook">Origin of the <see cref="!:accessToken"/>. "Guest", "Facebook" etc.</param>
            <param name="force">Says that if the account is already assigned, it should be reassigned to the new one anyways.</param>
        </member>
    </members>
</doc>
